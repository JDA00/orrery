plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

group 'com.jda'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

application {
    mainModule = 'com.jda.orrery'
    mainClass = 'com.jda.orrery.OrreryApp'
}

javafx {
    version = '11'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation "org.openjfx:javafx-controls:11"
    implementation "org.openjfx:javafx-fxml:11"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.10.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.10.2"
}

test {
    useJUnitPlatform()
}

tasks.named('run').configure {
    doFirst {
        jvmArgs += [
                '--module-path', classpath.asPath,
                '--add-modules', 'javafx.controls,javafx.fxml',



                // RTX 3090 optimized for 120 FPS
                "-Dprism.order=d3d,es2",              // Direct3D first (best for Windows + NVIDIA)
                "-Dprism.verbose=true",               // Keep for debugging
                "-Dprism.forceGPU=true",              // Force GPU acceleration
                "-Djavafx.animation.pulse=8",         // 120 FPS (8.33ms per frame)
                "-Djavafx.animation.fullspeed=true",  // Remove frame rate limiting
                "-Dprism.vsync=false",                // Disable vsync for higher FPS
                "-Dprism.targetvram=4",               // Use 4GB of VRAM
                "-Dprism.maxvram=16G",                // Allow up to 16GB VRAM usage
//                "-Dprism.poolstats=true",         // Show memory pool stats for debugging
                "-Dprism.dirtyopts=false",            // Disable dirty optimizations
                "-Dprism.allowhidpi=true",            // Support high DPI displays
                "-Dprism.maxTextureSize=8192"          // Larger texture support
                ]

                        // Windows-optimized settings
//                        "-Dprism.order=d3d,es2,sw",        // Direct3D first, then ES2, then software fallback
//                        "-Dprism.verbose=true",            // Keep for debugging
//                        "-Djavafx.animation.pulse=16",     // 60 FPS (16ms per frame)
//                        "-Dprism.vsync=true",             // Enable vsync
//                        "-Dprism.dirtyopts=false"         // Disable dirty region optimizations if causing issues
//                ]



//                // Mac integrated graphics settings (Intel Iris Plus)
//                "-Dprism.order=es2,sw",          // ES2 with software fallback
//                "-Dprism.verbose=true",          // Keep verbose for debugging
//                "-Djavafx.animation.pulse=120",   // Standard 60 FPS
//                "-Dprism.vsync=true",         // Enable vsync for smooth rendering
//                ]


        // Platform-specific settings
        if (System.getProperty("os.name").toLowerCase().contains("linux")) {
            environment "GDK_BACKEND", "x11"  // Ensures JavaFX runs correctly on Linux
        }

        classpath = files() // Clear the default classpath since this is modular
    }
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}